/* ========================================================================
 * Copyright 2014 G3xtreme
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 G3xtreme

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201411201032

*/

package co.edu.uniandes.csw.G3xtreme.responsable.logic.ejb;

import co.edu.uniandes.csw.G3xtreme.responsable.logic.api.IResponsableLogicService;
import co.edu.uniandes.csw.G3xtreme.responsable.logic.dto.ResponsableDTO;
import co.edu.uniandes.csw.G3xtreme.responsable.logic.dto.ResponsablePageDTO;
import java.util.Properties;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateless; 
import javax.enterprise.inject.Default;
import javax.inject.Inject;

import javax.mail.*;
import javax.mail.internet.*;


@Default
@Stateless
@LocalBean
public class ResponsableLogicService extends _ResponsableLogicService implements IResponsableLogicService {

    public ResponsablePageDTO getResponsablesPorNombre(String nombre) {
        return persistance.getResponsablesPorNombre(nombre);
    }

    public ResponsableDTO getResponsableId(String name) {
        return persistance.getResponsableId(name);
    }

    
    public boolean enviarCorreoAResponsable(String mensaje, String idResp) throws Exception {
    
    Properties props = new Properties();
		
		// Nombre del host de correo, es smtp.gmail.com
		props.setProperty("mail.smtp.host", "smtp.gmail.com");

		// TLS si está disponible
		props.setProperty("mail.smtp.starttls.enable", "true");

		// Puerto de gmail para envio de correos
		props.setProperty("mail.smtp.port","587");

		// Nombre del usuario
		props.setProperty("mail.smtp.user", "cristianbrcheror@gmail.com");

		// Si requiere o no usuario y password para conectarse.
		props.setProperty("mail.smtp.auth", "true");
		Session session = Session.getDefaultInstance(props);
		session.setDebug(true);
		MimeMessage message = new MimeMessage(session);
		// Quien envia el correo
			message.setFrom(new InternetAddress("cristianbrocheror@gmail.com"));
			// A quien va dirigido
                        ResponsableDTO r=persistance.getResponsable(Long.parseLong(idResp));
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(r.getCorreo()));
		
			message.setSubject("Notificación foro");
			message.setText(mensaje);
			Transport t = session.getTransport("smtp");
			t.connect("cristianbrocheror@gmail.com","31181121531");
			t.sendMessage(message,message.getAllRecipients());
			t.close();
		
			// TODO Auto-generated catch block
			
		
    
    
    return true;
    }
}