/* ========================================================================
 * Copyright 2014 G3xtreme
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 G3xtreme

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201411201032

*/

package co.edu.uniandes.csw.G3xtreme.dia_inscripcion.persistence;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import co.edu.uniandes.csw.G3xtreme.dia_inscripcion.logic.dto.Dia_InscripcionDTO;
import co.edu.uniandes.csw.G3xtreme.dia_inscripcion.logic.dto.Dia_InscripcionPageDTO;
import co.edu.uniandes.csw.G3xtreme.dia_inscripcion.persistence.api._IDia_InscripcionPersistence;
import co.edu.uniandes.csw.G3xtreme.dia_inscripcion.persistence.converter.Dia_InscripcionConverter;
import co.edu.uniandes.csw.G3xtreme.dia_inscripcion.persistence.entity.Dia_InscripcionEntity;

public abstract class _Dia_InscripcionPersistence implements _IDia_InscripcionPersistence {

  	@PersistenceContext(unitName="ForosISISPU")
 
	protected EntityManager entityManager;
	
	public Dia_InscripcionDTO createDia_Inscripcion(Dia_InscripcionDTO dia_Inscripcion) {
		Dia_InscripcionEntity entity=Dia_InscripcionConverter.persistenceDTO2Entity(dia_Inscripcion);
		entityManager.persist(entity);
		return Dia_InscripcionConverter.entity2PersistenceDTO(entity);
	}
	
	@SuppressWarnings("unchecked")
	public List<Dia_InscripcionDTO> getDia_Inscripcions() {
		Query q = entityManager.createQuery("select u from Dia_InscripcionEntity u");
		return Dia_InscripcionConverter.entity2PersistenceDTOList(q.getResultList());
	}

	@SuppressWarnings("unchecked")
	public Dia_InscripcionPageDTO getDia_Inscripcions(Integer page, Integer maxRecords) {
		Query count = entityManager.createQuery("select count(u) from Dia_InscripcionEntity u");
		Long regCount = 0L;
		regCount = Long.parseLong(count.getSingleResult().toString());
		Query q = entityManager.createQuery("select u from Dia_InscripcionEntity u");
		if (page != null && maxRecords != null) {
		    q.setFirstResult((page-1)*maxRecords);
		    q.setMaxResults(maxRecords);
		}
		Dia_InscripcionPageDTO response = new Dia_InscripcionPageDTO();
		response.setTotalRecords(regCount);
		response.setRecords(Dia_InscripcionConverter.entity2PersistenceDTOList(q.getResultList()));
		return response;
	}

	public Dia_InscripcionDTO getDia_Inscripcion(Long id) {
		return Dia_InscripcionConverter.entity2PersistenceDTO(entityManager.find(Dia_InscripcionEntity.class, id));
	}

	public void deleteDia_Inscripcion(Long id) {
		Dia_InscripcionEntity entity=entityManager.find(Dia_InscripcionEntity.class, id);
		entityManager.remove(entity);
	}

	public void updateDia_Inscripcion(Dia_InscripcionDTO detail) {
		Dia_InscripcionEntity entity=entityManager.merge(Dia_InscripcionConverter.persistenceDTO2Entity(detail));
		Dia_InscripcionConverter.entity2PersistenceDTO(entity);
	}

}