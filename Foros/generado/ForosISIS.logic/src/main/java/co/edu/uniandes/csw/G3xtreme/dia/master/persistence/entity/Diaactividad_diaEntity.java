/* ========================================================================
 * Copyright 2014 G3xtreme
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 G3xtreme

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201410152247

*/

package co.edu.uniandes.csw.G3xtreme.dia.master.persistence.entity;

import co.edu.uniandes.csw.G3xtreme.actividad.persistence.entity.ActividadEntity;
import co.edu.uniandes.csw.G3xtreme.dia.persistence.entity.DiaEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(Diaactividad_diaEntityId.class)
@NamedQueries({
    @NamedQuery(name = "Diaactividad_diaEntity.getByMasterId", query = "SELECT  u FROM Diaactividad_diaEntity u WHERE u.diaId=:diaId"),
    @NamedQuery(name = "Diaactividad_diaEntity.deleteDiaactividad_diaEntity", query = "DELETE FROM Diaactividad_diaEntity u WHERE u.diaId=:diaId and  u.actividad_diaId=:actividad_diaId")
})
public class Diaactividad_diaEntity implements Serializable {

    @Id
    @Column(name = "diaId")
    private Long diaId;
    @Id
    @Column(name = "actividad_diaId")
    private Long actividad_diaId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "diaId", referencedColumnName = "id")
    @JoinFetch
    private ActividadEntity diaIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "actividad_diaId", referencedColumnName = "id")
    @JoinFetch
    private ActividadEntity actividad_diaIdEntity; 

    public Diaactividad_diaEntity() {
    }

    public Diaactividad_diaEntity(Long diaId, Long actividad_diaId) {
        this.diaId =diaId;
        this.actividad_diaId = actividad_diaId;
    }

    public Long getDiaId() {
        return diaId;
    }

    public void setDiaId(Long diaId) {
        this.diaId = diaId;
    }

    public Long getActividad_diaId() {
        return actividad_diaId;
    }

    public void setActividad_diaId(Long actividad_diaId) {
        this.actividad_diaId = actividad_diaId;
    }

    public ActividadEntity getDiaIdEntity() {
        return diaIdEntity;
    }

    public void setDiaIdEntity(ActividadEntity diaIdEntity) {
        this.diaIdEntity = diaIdEntity;
    }

    public ActividadEntity getActividad_diaIdEntity() {
        return actividad_diaIdEntity;
    }

    public void setActividad_diaIdEntity(ActividadEntity actividad_diaIdEntity) {
        this.actividad_diaIdEntity = actividad_diaIdEntity;
    }

}
