/* ========================================================================
 * Copyright 2014 G3xtreme
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 G3xtreme

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201410152247

*/

package co.edu.uniandes.csw.G3xtreme.foro.master.persistence.entity;

import co.edu.uniandes.csw.G3xtreme.dia.persistence.entity.DiaEntity;
import co.edu.uniandes.csw.G3xtreme.foro.persistence.entity.ForoEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(Forodia_foroEntityId.class)
@NamedQueries({
    @NamedQuery(name = "Forodia_foroEntity.getByMasterId", query = "SELECT  u FROM Forodia_foroEntity u WHERE u.foroId=:foroId"),
    @NamedQuery(name = "Forodia_foroEntity.deleteForodia_foroEntity", query = "DELETE FROM Forodia_foroEntity u WHERE u.foroId=:foroId and  u.dia_foroId=:dia_foroId")
})
public class Forodia_foroEntity implements Serializable {

    @Id
    @Column(name = "foroId")
    private Long foroId;
    @Id
    @Column(name = "dia_foroId")
    private Long dia_foroId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "foroId", referencedColumnName = "id")
    @JoinFetch
    private DiaEntity foroIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "dia_foroId", referencedColumnName = "id")
    @JoinFetch
    private DiaEntity dia_foroIdEntity; 

    public Forodia_foroEntity() {
    }

    public Forodia_foroEntity(Long foroId, Long dia_foroId) {
        this.foroId =foroId;
        this.dia_foroId = dia_foroId;
    }

    public Long getForoId() {
        return foroId;
    }

    public void setForoId(Long foroId) {
        this.foroId = foroId;
    }

    public Long getDia_foroId() {
        return dia_foroId;
    }

    public void setDia_foroId(Long dia_foroId) {
        this.dia_foroId = dia_foroId;
    }

    public DiaEntity getForoIdEntity() {
        return foroIdEntity;
    }

    public void setForoIdEntity(DiaEntity foroIdEntity) {
        this.foroIdEntity = foroIdEntity;
    }

    public DiaEntity getDia_foroIdEntity() {
        return dia_foroIdEntity;
    }

    public void setDia_foroIdEntity(DiaEntity dia_foroIdEntity) {
        this.dia_foroIdEntity = dia_foroIdEntity;
    }

}
